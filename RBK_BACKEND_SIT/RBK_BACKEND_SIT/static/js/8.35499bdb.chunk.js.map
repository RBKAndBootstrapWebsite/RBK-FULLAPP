{"version":3,"sources":["views/pages/login/Login.js"],"names":["Login","props","state","loginData","username","password","isAuthenticated","handleChange","bind","handleSubmit","event","target","name","value","e","axios","defaults","xsrfCookieName","xsrfHeaderName","preventDefault","localStorage","clear","csrftoken","this","getCookie","data","console","log","method","headers","url","then","response","token","setItem","Logindatacopy1","setState","catch","error","cookieValue","document","cookie","cookies","split","i","length","$","trim","substring","decodeURIComponent","className","type","md","onSubmit","placeholder","autoComplete","onChange","xs","color","onClick","style","width","src","Component"],"mappings":"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","file":"static/js/8.35499bdb.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport $ from \"jquery\";\r\n\r\n\r\nimport axios from \"axios\";\r\nimport jwtDecode from \"jwt-decode\";\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardGroup,\r\n  CCol,\r\n  CContainer,\r\n  CForm,\r\n  CInput,\r\n  CInputGroup,\r\n  CInputGroupPrepend,\r\n  CInputGroupText,\r\n  CRow,\r\n} from \"@coreui/react\";\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loginData: {\r\n        username: \"\",\r\n        password: \"\",\r\n        isAuthenticated: false,\r\n      },\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    // localStorage.clear()\r\n    // if (localStorage.getItem('token')) {\r\n    //   const tokenStr = jwtDecode(localStorage.getItem('token'));\r\n    //   console.log(tokenStr)\r\n    //   if (tokenStr) {\r\n    //     //this.props.history.push('/');\r\n    //   }\r\n    // }\r\n  }\r\n  handleChange(event) {\r\n    // take a copy from state object\r\n    const loginDataCopy = {\r\n      // ...this.state.loginData,\r\n    };\r\n\r\n    loginDataCopy[event.target.name] = event.target.value;\r\n    // this.setState({ loginData: loginDataCopy });\r\n  }\r\n\r\n  handleSubmit(e) {\r\n    // const cookies = new Cookies(req.headers.cookie);\r\n    //  var csrfCookie = cookies.get('csrftoken'); \r\n  \r\n    //  console.log('csrf cookie: ', csrfCookie); // set to undefined\r\n    axios.defaults.xsrfCookieName = 'csrftoken'\r\n    axios.defaults.xsrfHeaderName = 'X-CSRFToken'\r\n    //  axios.defaults.withCredentials = true;\r\n\r\n    let that = this;\r\n    e.preventDefault();\r\n    localStorage.clear();\r\n    var csrftoken = this.getCookie('csrftoken');\r\n\r\n    const data = {\r\n      username: this.state.loginData.username,\r\n      password: this.state.loginData.password,\r\n    };\r\n    console.log(data);\r\n\r\n    axios({\r\n      method: \"post\",\r\n      headers: {\r\n       'Accept': 'application/json',\r\n      'Content-Type': 'application/json',\r\n      'X-CSRFToken': csrftoken\r\n      },\r\n      url: \"/api/accounts/login/\",\r\n      data: data,\r\n    })\r\n      .then((response) => {\r\n        if (response.data.token) {\r\n          console.log(response.data.token,\"iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\");\r\n          // set the token in localStorage\r\n          const token = response.data.token;\r\n          localStorage.setItem(\"token\", token);\r\n          // localStorage.setItem(\"token\", token);\r\n\r\n          const Logindatacopy1 = { ...this.state.loginData };\r\n\r\n          Logindatacopy1.isAuthenticated = true;\r\n\r\n          this.setState({\r\n            loginData: Logindatacopy1,\r\n          });\r\n\r\n          console.log(this.state.loginData)\r\n          localStorage.setItem(\"token\", \"hello token try\");\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        console.log(\"Error: \", error);\r\n        localStorage.setItem(\"token\", \"hello token catch\");\r\n        // window.location.reload();\r\n      });\r\n  }\r\n\r\n\r\n   getCookie(name) {\r\n    var cookieValue = null;\r\n    if (document.cookie && document.cookie !== '') {\r\n        var cookies = document.cookie.split(';');\r\n        for (var i = 0; i < cookies.length; i++) {\r\n            var cookie = $.trim(cookies[i]);\r\n            if (cookie.substring(0, name.length + 1) === (name + '=')) {\r\n                cookieValue = decodeURIComponent(cookie.substring(name.length + 1));\r\n                break;\r\n            }\r\n        }\r\n    }\r\n    console.log(cookieValue)\r\n    return cookieValue;\r\n}\r\n  render() {\r\n    var csrftoken = this.getCookie('csrftoken');\r\n\r\n    return (\r\n      <div className=\"c-app c-default-layout flex-row align-items-center\">\r\n                <input type=\"hidden\" name=\"csrfmiddlewaretoken\" value={csrftoken} />\r\n\r\n        <CContainer>\r\n          <CRow className=\"justify-content-center\">\r\n            <CCol md=\"8\">\r\n              <CCardGroup>\r\n                <CCard className=\"p-4\">\r\n                  <CCardBody>\r\n                    <CForm onSubmit={this.handleSubmit}>\r\n                      <h1>Login</h1>\r\n                      <p className=\"text-muted\">Sign In to your account</p>\r\n                      <CInputGroup className=\"mb-3\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <CIcon name=\"cil-user\" />\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput\r\n                          type=\"text\"\r\n                          placeholder=\"Username\"\r\n                          name=\"username\"\r\n                          autoComplete=\"username\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </CInputGroup>\r\n                      <CInputGroup className=\"mb-4\">\r\n                        <CInputGroupPrepend>\r\n                          <CInputGroupText>\r\n                            <CIcon name=\"cil-lock-locked\" />\r\n                          </CInputGroupText>\r\n                        </CInputGroupPrepend>\r\n                        <CInput\r\n                          type=\"password\"\r\n                          placeholder=\"Password\"\r\n                          name=\"password\"\r\n                          autoComplete=\"current-password\"\r\n                          onChange={this.handleChange}\r\n                        />\r\n                      </CInputGroup>\r\n                      <CRow>\r\n                        <CCol xs=\"6\">\r\n                          <CButton\r\n                            color=\"primary\"\r\n                            className=\"px-4\"\r\n                            onClick={this.handleSubmit}\r\n                          >\r\n                            Login\r\n                          </CButton>\r\n                        </CCol>\r\n                      </CRow>\r\n                    </CForm>\r\n                  </CCardBody>\r\n                </CCard>\r\n                <CCard\r\n                  className=\"text-white bg-primary py-5 d-md-down-none\"\r\n                  style={{ width: \"44%\" }}\r\n                >\r\n                  <CCardBody className=\"text-center\">\r\n                    <div>\r\n                      <img src=\"\" />\r\n                    </div>\r\n                  </CCardBody>\r\n                </CCard>\r\n              </CCardGroup>\r\n            </CCol>\r\n          </CRow>\r\n        </CContainer>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Login;\r\n"],"sourceRoot":""}