{"version":3,"sources":["containers/_nav.js","routes.js","containers/TheContent.js","containers/TheFooter.js","containers/TheHeader.js","containers/TheSidebar.js","containers/TheLayout.js"],"names":["weeksData","nav","routes","path","exact","name","component","React","lazy","loading","className","TheContent","fluid","fallback","map","route","idx","render","props","from","to","memo","TheFooter","fixed","TheHeader","dispatch","useDispatch","sidebarShow","useSelector","state","console","log","withSubheader","inHeader","onClick","val","includes","type","isActivate","require","element","status","subjectsTemplate","subjects","dayNumber","weekNumber","subjectId","subject","index","id","_tag","surveysTemplate","surveys","survey","surveyTitle","_nav","data","push","_children","weeks","forEach","week","days","day","addSurveystoNvTemplate","TheSidebar","show","useEffect","onShowChange","height","items","navigation","components","CSidebarNavDropdown","CSidebarNavItem","CSidebarNavTitle","TheLayout"],"mappings":"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","file":"static/js/5.f3bc5b42.chunk.js","sourcesContent":["import data from \"../data.json\";\r\nimport surveys from \"../surveysData.json\";\r\nconst axios = require(\"axios\");\r\n/**\r\n * @todo change url get request\r\n * @todo Fetch surveys from server\r\n */\r\n// const getWeeksRequest = async () => {\r\n//   try {\r\n//     const resp = await axios.get(\r\n//       \"http://127.0.0.1:8000/api/weeks/weeks/get_weeks\"\r\n//     );\r\n//     console.log(resp.data);\r\n//   } catch (err) {\r\n//     // Handle Error Here\r\n//     console.error(err);\r\n//   }\r\n// };\r\n// getWeeksRequest();\r\n\r\n/**\r\n * @desc check if an element activate or not\r\n * @param obj (week, day, subject)\r\n * @returns true/false\r\n */\r\nconst isActivate = (element) => {\r\n  if (element.status) return true;\r\n  return false;\r\n};\r\n\r\n/**\r\n * @description convert a JS array of subjects to coreui template\r\n * @param [] subjects\r\n * @returns subjects coreui template\r\n */\r\nconst subjectsTemplate = (subjects, dayNumber, weekNumber) => {\r\n  let subjectId;\r\n  return subjects.map((subject, index) => {\r\n    if (isActivate(subject)) {\r\n      subjectId = subject.id;\r\n      return {\r\n        _tag: \"CSidebarNavItem\",\r\n        name: `Subject ${index + 1}`,\r\n        to: `/subject/${subjectId}`,\r\n      };\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * @description convert a JS array of days to coreui template\r\n * @param [] days\r\n * @returns days coreui template\r\n */\r\nconst daysTemplate = (days, weekNumber) => {\r\n  return days.map((day, index) => {\r\n    if (isActivate(day)) {\r\n      return {\r\n        _tag: \"CSidebarNavDropdown\",\r\n        name: `Day ${index + 1}`,\r\n        _children: subjectsTemplate(day.subjects, index, weekNumber),\r\n      };\r\n    }\r\n  });\r\n};\r\n\r\n/**\r\n * @description convert array of weeks to coreui template\r\n * @param [] of weeks, nav array\r\n * @returns array of main navBar\r\n */\r\nconst addWeeksToNavTemplate = (weeksData, nav) => {\r\n  nav.push({\r\n    _tag: \"CSidebarNavTitle\",\r\n    _children: [\"Exercises\"],\r\n  });\r\n\r\n  weeksData.weeks.forEach((week, index) => {\r\n    if (isActivate(week)) {\r\n      nav.push({\r\n        _tag: \"CSidebarNavDropdown\",\r\n        name: `Week  ${index + 1}`,\r\n        _children: daysTemplate(week.days, index),\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nconst surveysTemplate = (surveys) => {\r\n  return surveys.map((survey, index) => {\r\n    return {\r\n      _tag: \"CSidebarNavItem\",\r\n      name: `${survey.surveyTitle}`,\r\n      to: `/survey/${survey.surveyTitle}`,\r\n    };\r\n  });\r\n};\r\n\r\nconst addSurveystoNvTemplate = (surveys, nav) => {\r\n  nav.push({\r\n    _tag: \"CSidebarNavTitle\",\r\n    _children: [\"Surveys\"],\r\n  });\r\n\r\n  nav.push({\r\n    _tag: \"CSidebarNavDropdown\",\r\n    name: `Surveys`,\r\n    _children: surveysTemplate(surveys),\r\n  });\r\n};\r\n\r\nlet _nav = [];\r\n\r\naddWeeksToNavTemplate(data, _nav);\r\naddSurveystoNvTemplate(surveys, _nav);\r\n\r\nexport { _nav, data, surveys };\r\n","import React from \"react\";\r\n\r\nconst Subject = React.lazy(() => import(\"./views/pages/subject/Subject\"));\r\nconst Survey = React.lazy(() => import(\"./views/pages/survey/Survey\"));\r\n\r\nconst routes = [\r\n  { path: \"/\", exact: true, name: \"Home\" },\r\n  { path: \"/subject/:id\", exact: true, name: `Subjects`, component: Subject },\r\n  { path: \"/survey/:title\", exact: true, name: `Surveys`, component: Survey },\r\n];\r\n\r\nexport default routes;\r\n","import React, { Suspense } from \"react\";\r\nimport { Redirect, Route, Switch } from \"react-router-dom\";\r\nimport { CContainer, CFade } from \"@coreui/react\";\r\n\r\n// routes config\r\nimport routes from \"../routes\";\r\n\r\nconst loading = (\r\n  <div className=\"pt-3 text-center\">\r\n    <div className=\"sk-spinner sk-spinner-pulse\"></div>\r\n  </div>\r\n);\r\n\r\nconst TheContent = () => {\r\n  return (\r\n    <main className=\"c-main\">\r\n      <CContainer fluid>\r\n        <Suspense fallback={loading}>\r\n          <Switch>\r\n            {routes.map((route, idx) => {\r\n              return (\r\n                route.component && (\r\n                  <Route\r\n                    key={idx}\r\n                    path={route.path}\r\n                    exact={route.exact}\r\n                    name={route.name}\r\n                    render={(props) => (\r\n                      <CFade>\r\n                        <route.component {...props} />\r\n                      </CFade>\r\n                    )}\r\n                  />\r\n                )\r\n              );\r\n            })}\r\n            <Redirect from=\"/\" to=\"/\" />\r\n          </Switch>\r\n        </Suspense>\r\n      </CContainer>\r\n    </main>\r\n  );\r\n};\r\n\r\nexport default React.memo(TheContent);\r\n","import React from \"react\";\r\nimport { CFooter } from \"@coreui/react\";\r\n\r\nconst TheFooter = () => {\r\n  return (\r\n    <CFooter fixed={false}>\r\n      <div></div>\r\n      <div className=\"mfs-auto\">\r\n        <span className=\"ml-1\">&copy; RBK</span>\r\n      </div>\r\n    </CFooter>\r\n  );\r\n};\r\n\r\nexport default React.memo(TheFooter);\r\n","import React from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {\r\n  CHeader,\r\n  CToggler,\r\n  CHeaderBrand,\r\n  CHeaderNav,\r\n  CHeaderNavItem,\r\n  CHeaderNavLink,\r\n  CSubheader,\r\n  CBreadcrumbRouter,\r\n} from \"@coreui/react\";\r\n\r\n// routes config\r\nimport routes from \"../routes\";\r\n\r\nconst TheHeader = () => {\r\n  const dispatch = useDispatch();\r\n  const sidebarShow = useSelector((state) => state.sidebarShow);\r\n\r\n  console.log(sidebarShow);\r\n  const toggleSidebar = () => {\r\n    const val = [true, \"responsive\"].includes(sidebarShow)\r\n      ? false\r\n      : \"responsive\";\r\n    dispatch({ type: \"set\", sidebarShow: val });\r\n  };\r\n\r\n  const toggleSidebarMobile = () => {\r\n    const val = [false, \"responsive\"].includes(sidebarShow)\r\n      ? true\r\n      : \"responsive\";\r\n    dispatch({ type: \"set\", sidebarShow: val });\r\n  };\r\n\r\n  return (\r\n    <CHeader withSubheader>\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-md-3 d-lg-none\"\r\n        onClick={toggleSidebarMobile}\r\n      />\r\n      <CToggler\r\n        inHeader\r\n        className=\"ml-3 d-md-down-none\"\r\n        onClick={toggleSidebar}\r\n      />\r\n      <CHeaderBrand className=\"mx-auto d-lg-none\" to=\"/\">\r\n        {/* <CIcon name=\"logo\" height=\"48\" alt=\"Logo\" /> */}\r\n      </CHeaderBrand>\r\n\r\n      <CHeaderNav className=\"d-md-down-none mr-auto\">\r\n        <CHeaderNavItem className=\"px-3\">\r\n          <CHeaderNavLink to=\"/logout\">Log Out</CHeaderNavLink>\r\n        </CHeaderNavItem>\r\n      </CHeaderNav>\r\n\r\n      <CSubheader className=\"px-3 justify-content-between\">\r\n        <CBreadcrumbRouter\r\n          className=\"border-0 c-subheader-nav m-0 px-0 px-md-3\"\r\n          routes={routes}\r\n        />\r\n      </CSubheader>\r\n    </CHeader>\r\n  );\r\n};\r\n\r\nexport default TheHeader;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nimport {\r\n  CCreateElement,\r\n  CSidebar,\r\n  CSidebarBrand,\r\n  CSidebarNav,\r\n  CSidebarNavTitle,\r\n  CSidebarNavDropdown,\r\n  CSidebarNavItem,\r\n} from \"@coreui/react\";\r\n\r\nimport CIcon from \"@coreui/icons-react\";\r\n\r\n// sidebar nav config\r\nimport { _nav as navigation, data, surveys } from \"./_nav\";\r\n\r\nconst TheSidebar = () => {\r\n  const dispatch = useDispatch();\r\n  const show = useSelector((state) => state.sidebarShow);\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: \"setWeeksData\", data: data });\r\n    dispatch({ type: \"setSurveys\", surveys: surveys });\r\n  }, []);\r\n\r\n  return (\r\n    <CSidebar\r\n      show={show}\r\n      onShowChange={(val) => dispatch({ type: \"set\", sidebarShow: val })}\r\n    >\r\n      <CSidebarBrand className=\"d-md-down-none\" to=\"/\">\r\n        <CIcon\r\n          className=\"c-sidebar-brand-minimized\"\r\n          name=\"sygnet\"\r\n          height={35}\r\n        />\r\n      </CSidebarBrand>\r\n      <CSidebarNav>\r\n        <CCreateElement\r\n          items={navigation}\r\n          components={{\r\n            CSidebarNavDropdown,\r\n            CSidebarNavItem,\r\n            CSidebarNavTitle,\r\n          }}\r\n        />\r\n      </CSidebarNav>\r\n      {/* <CSidebarMinimizer className=\"c-d-md-down-none\" /> */}\r\n    </CSidebar>\r\n  );\r\n};\r\n\r\nexport default React.memo(TheSidebar);\r\n","import React from \"react\";\r\nimport { TheContent, TheSidebar, TheFooter, TheHeader } from \"./index\";\r\n\r\nconst TheLayout = () => {\r\n  return (\r\n    <div className=\"c-app c-default-layout\">\r\n      <TheSidebar />\r\n      <div className=\"c-wrapper\">\r\n        <TheHeader />\r\n        <div className=\"c-body\">\r\n          <TheContent />\r\n        </div>\r\n        <TheFooter />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TheLayout;\r\n"],"sourceRoot":""}